service: virtual-chime-polymer-service

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  timeout: 30
  environment:
    REGION: ${opt:region, self:provider.region}
    USE_EVENT_BRIDGE: 'false'
    SQS_QUEUE_ARN: !GetAtt MeetingNotificationsQueue.Arn
    MEETINGS_TABLE_NAME: !Ref Meetings
    BROWSER_LOG_GROUP_NAME: !Ref ChimeBrowserLogs
    API_VERSION: '2020-05-20'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'chime:CreateMeeting'
        - 'chime:DeleteMeeting'
        - 'chime:GetMeeting'
        - 'chime:ListMeetings'
        - 'chime:BatchCreateAttendee'
        - 'chime:CreateAttendee'
        - 'chime:DeleteAttendee'
        - 'chime:GetAttendee'
        - 'chime:ListAttendees'
      Resource: '*'
    - Effect: Allow
      Action:
        - 'logs:CreateLogStream'
        - 'logs:PutLogEvents'
        - 'logs:DescribeLogStreams'
      Resource: '*'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: '*'

package:
  exclude:
    - .build/**
    - .dynamodb/**
    - 'controllers/**'
    - 'handlers/**'
    - 'mappers/**'
  individually: true
  
functions:
  join:
    handler: handlers/meeting.join
    package:
      include:
        - handlers/meeting.js
        - controllers/meeting-controller.js
        - controllers/dynamo-controller.js
        - mappers/response-mapper.js
    events:
      - http:
          path: join
          method: post
  end:
    handler: handlers/meeting.end
    package:
      include:
        - handlers/meeting.js
        - controllers/meeting-controller.js
        - controllers/dynamo-controller.js
        - mappers/response-mapper.js
    events:
      - http:
          path: end
          method: post
  queue:
    handler: handlers/cloudwatch.sqs
    package:
      include:
        - handlers/cloudwatch.js
    events:
      - sqs:
          arn: !GetAtt MeetingNotificationsQueue.Arn
          batchSize: 10
          maximumRetryAttempts: 2
  logs:
    handler: handlers/cloudwatch.logs
    package:
      include:
        - handlers/cloudwatch.js
        - controllers/cloudwatch-controller.js
        - mappers/response-mapper.js
    events:
      - http:
          path: logs
          method: post
          
resources:
  Resources:
    MeetingNotificationsQueue:
      Type: AWS::SQS::Queue
    Meetings:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "Title"
            AttributeType: "S"
          - AttributeName: "Passcode"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "Title"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"
        GlobalSecondaryIndexes:
          - IndexName: "Passcode"
            KeySchema:
              - AttributeName: "Passcode"
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: "5"
              WriteCapacityUnits: "5"
        TimeToLiveSpecification:
          AttributeName: "TTL"
          Enabled: true
    ChimeBrowserLogs:
      Type: AWS::Logs::LogGroup
      
# custom:
#   dynamodb:
#     stages:
#       - dev
#     start:
#       port: 8000
#       inMemory: true
#       heapInitial: 200m
#       heapMax: 1g
#       migrate: true
#       seed: true
#       convertEmptyValues: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-plugin-typescript
